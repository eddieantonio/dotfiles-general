# vim: set ft=zsh:

# Aliases

# "Safe" commands
alias mv="mv -i"
alias cp="cp -i"
alias rm="rm -i"

# Awesome LS
alias ls='ls -Gph'
alias ll='ls -l'
alias la='ll -a'

# I like colours.
alias grep='grep --color'

# Useful aliases
alias tarz='tar -xzvf'
alias svi="sudo vim"
alias mkdir='mkdir -p'
alias isodate='date +%F'
alias isodatetime='date +%FT%H:%M:%S%z'
alias isodatetimeutc='date -u +%FT%H:%M:%SZ'
alias unixtime='date +%s'

# forget(1)
#
# Forget a file (dump in temp directory that gets deleted on reboot).
#
# Makes me feel safer than doing an rm, because I can still technically
# recover forgotten files (up to a point).
forget() {
    if [ $# -lt 1 ] ;then
        open /tmp/
    else
        mv -f $@ /tmp/
    fi
}


################################# Git stuff #################################

# My git aliases
alias ga='git add'
alias gc='git commit'
alias gca='git commit -a'
alias gd='git diff'
alias gl='git pull'
alias gp='git push'
alias gss='git status --short'
alias gsw="git switch"
alias grt="git restore"
# My muscle memory stretches for this alias for git-checkout,
# but git-revert and git-switch are almost always better options:
function gco() {
    echo 'Use `gsw` or `grt` instead!'
    return 2
}
alias gb='git branch'
# gupdate(1)
#
# gupdate -- switch to the primary branch with the latest updates
# Use case: when I'm on a merged branch, and I want to switch back to the
# default branch
function gupdate() {
    DEFAULT_BRANCH="$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')"
    git switch $DEFAULT_BRANCH && git pull && hub sync
}

# Unconditionally git commit --ammend
alias gcamend='env GIT_EDITOR=true git commit --amend'

# https://www.gitignore.io/
function gi() { curl -L -s https://www.gitignore.io/api/$@ ;}
# This is a good way too:
# git config --global alias.ignore '!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi'

# This will never run out of its novelty.
alias such=git
alias very=git
alias much=git
alias wow='git status -s'


################################ Python stuff ################################

# Python doctest
alias doctest2='python -m doctest'
alias doctest='python3 -m doctest'

# Install a Python module globally
gpip() {
    PIP_REQUIRE_VIRTUALENV="" pip3 --user $@
}


########################### Jekyll and blog stuff ###########################

# Jekyll post generation
function post-jekyll {
    if [ -z "$1" ]; then
        echo "Usage: provide a title argument."
        return -1
    else
        title="$@"
    fi

    d=$(date +"%Y-%m-%d")
    D="$d $(date +"%H:%M:%S")"

    slug=$(echo $title | tr '[:upper:]' '[:lower:]' | tr '[:space:]' '-')
    slug="${slug:0:${#slug}-1}"
    post="./_posts/$d-$slug.md"

    body=""
    read -d '' body <<EOF
    ---
    title:  $title
    ---

EOF

    echo "$body" > $post
    $EDITOR $post
}

# Webdev stuff.
alias jeks='jekyll serve --watch'

################################ macOS stuff ################################

# Rstudio on macOS
if [ -d /Applications/RStudio.app ]; then
    alias rstudio='open -aRStudio'
fi

saybugs() {
    man $1|col -b|sed -n '/^BUGS/,/^[A-Z]/p' |tail -n+2 |{ say --voice=Bad||espeak; };
}

voices() {
    say --voice '?' | cut -d ' ' -f 1 | xargs -I {} say --voice {} 'Hello, my name is {}.'
}

pman() {
    man -t ${@} | open -f -a /Applications/Preview.app/
}

# Show/hide folders in Finder.
alias hide='chflags hidden'

# https://github.com/emilisto/itmux/blob/master/itmux.sh
function itmux-ssh() {
    local arg_attach

    CMD="ssh $@ -t $ITMUX_TMUX_RELATIVE_PATH -C"

    # Check if session exists on server and if so, attach to it.
    eval $CMD has-session &> /dev/null
    if [[ $? -eq 0 ]]; then
        arg_attach="attach"
    fi

    eval $CMD $arg_attach

    if [[ $? -eq 0 ]]; then
        echo -e $GREEN"Session detached."$NORMAL
    else
        echo $RED"tmux returned with error exit status - have you installed the required"
        echo "iTerm2 version of tmux on the remote host? Try doing:"
        echo $YELLOW"\$ itmux-ssh-install $@"$NORMAL
    fi
}


############################### Uncategorized ###############################

# Erlang rebar stuff
alias erlb='erl -pz ebin deps/*/ebin'

# For no real reason:
alias rot13="tr '[A-Za-z]' '[N-ZA-Mn-za-m]'"

# :?
alias yass='yes yass'

# Get content-type of file.
alias mime='file -b --mime-type'

# Use Pygements to colour source code in less.
alias pcat='pygmentize -g'
function pless () {
    pcat $1 | less
}

# Add a tac commond on systems that lack it.
hash tac 2> /dev/null || alias tac='tail -r'

# manswitch <cmd> <flag>
# e.g.,
# manswitch curl -x
# From: https://www.commandlinefu.com/commands/view/9065/what-is-the-use-of-this-switch-
function manswitch () {
    man $1 | less -p "^ +$2"
}

# If somebody decides to alias sl, undo it!
if alias sl &> /dev/null; then
    unalias sl
fi
